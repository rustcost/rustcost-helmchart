{{- if .Values.cadvisor.enabled }}
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ include "rustcost.fullname" . }}-cadvisor
  labels:
    {{- include "rustcost.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      app: {{ include "rustcost.name" . }}-cadvisor
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ include "rustcost.name" . }}-cadvisor
        release: {{ .Release.Name }}
    spec:
      hostPID: true
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      tolerations:
        - effect: NoSchedule
          operator: Exists
      containers:
        - name: cadvisor
          image: {{ .Values.cadvisor.image }}
          securityContext:
            privileged: true
          args:
            - --housekeeping_interval=10s
            - --max_housekeeping_interval=15s
            - --containerd=/run/containerd/containerd.sock   # âœ… modern k8s uses containerd
            - --docker_only=false
          ports:
            - name: metrics
              containerPort: {{ .Values.cadvisor.port }}
              hostPort: {{ .Values.cadvisor.port }}
          resources:
            requests:
              cpu: "50m"
              memory: "128Mi"
            limits:
              cpu: "200m"
              memory: "512Mi"
          volumeMounts:
            - name: rootfs
              mountPath: /rootfs
              readOnly: true
            - name: var-run
              mountPath: /var/run
            - name: sys
              mountPath: /sys
              readOnly: true
            - name: docker
              mountPath: /var/lib/docker
              readOnly: true
            - name: cgroup
              mountPath: /cgroup
              readOnly: true
      volumes:
        - name: rootfs
          hostPath:
            path: /
        - name: var-run
          hostPath:
            path: /var/run
        - name: sys
          hostPath:
            path: /sys
        - name: docker
          hostPath:
            path: /var/lib/docker
        - name: cgroup
          hostPath:
            path: /sys/fs/cgroup
{{- end }}
